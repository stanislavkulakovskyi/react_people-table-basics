{"version":3,"sources":["components/Navbar/NavbarLink/NavbarLink.tsx","components/Navbar/Navbar.tsx","App.tsx","api.ts","helpers/helpers.ts","components/Loader/Loader.tsx","components/PersonLink/PersonLink.tsx","components/PersonItem/PersonItem.tsx","components/PeopleTable/PeopleTable.tsx","pages/PeoplePage/PeoplePage.tsx","pages/HomePage/HomePage.tsx","pages/NotFoundPage/NotFoundPage.tsx","index.tsx"],"names":["NavbarLink","to","text","className","isActive","classnames","Navbar","React","memo","role","App","getPeople","delay","Promise","resolve","setTimeout","then","fetch","response","json","findParent","people","parentName","find","person","name","Loader","PersonLink","slug","sex","PersonItem","useParams","isSelected","born","died","mother","motherName","father","fatherName","PeopleTable","map","PeoplePage","useState","setPeople","isLoading","setIsLoading","isLoadError","setIsLoadError","useEffect","loadedPeople","preparedPeople","catch","finally","length","HomePage","NotFoundPage","createRoot","document","getElementById","render","path","element","index","replace"],"mappings":"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","file":"static/js/main.f3bd63ed.chunk.js","sourcesContent":["import React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport classnames from 'classnames';\n\nexport type Props = {\n  to: string;\n  text: string;\n};\n\nexport const NavbarLink: React.FC<Props> = ({ to, text }) => (\n  <NavLink\n    to={to}\n    className={({ isActive }) => classnames(\n      'navbar-item',\n      { 'has-background-grey-lighter': isActive },\n    )}\n  >\n    {text}\n  </NavLink>\n);\n","import React from 'react';\nimport { NavbarLink } from './NavbarLink';\n\nexport const Navbar = React.memo(\n  () => {\n    return (\n      <nav\n        data-cy=\"nav\"\n        className=\"navbar is-fixed-top has-shadow\"\n        role=\"navigation\"\n        aria-label=\"main navigation\"\n      >\n        <div className=\"container\">\n          <div className=\"navbar-brand\">\n            <NavbarLink to=\"/\" text=\"Home\" />\n            <NavbarLink to=\"/people\" text=\"People\" />\n          </div>\n        </div>\n      </nav>\n    );\n  },\n);\n","import './App.scss';\nimport { Outlet } from 'react-router-dom';\nimport { Navbar } from './components/Navbar/Navbar';\n\nexport const App = () => {\n  return (\n    <div data-cy=\"app\">\n      <Navbar />\n\n      <main className=\"section\">\n        <div className=\"container\">\n          <Outlet />\n        </div>\n      </main>\n    </div>\n  );\n};\n","import { Person } from './types/Person';\n\n// eslint-disable-next-line max-len\nconst API_URL = 'https://mate-academy.github.io/react_people-table/api/people.json';\n\nfunction wait(delay: number) {\n  return new Promise(resolve => setTimeout(resolve, delay));\n}\n\nexport function getPeople(): Promise<Person[]> {\n  // keep this delay for testing purpose\n  return wait(500)\n    .then(() => fetch(API_URL))\n    .then(response => response.json());\n}\n","import { Person } from '../types';\n\nexport const findParent = (\n  people: Person[],\n  parentName: string | null,\n) => {\n  return people.find(person => person.name === parentName) || null;\n};\n","import './Loader.scss';\n\nexport const Loader = () => (\n  <div className=\"Loader\" data-cy=\"loader\">\n    <div className=\"Loader__content\" />\n  </div>\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { Link } from 'react-router-dom';\nimport { Person } from '../../types';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonLink: React.FC<Props> = React.memo(\n  ({ person }) => (\n    <>\n      <Link\n        to={`../${person.slug}`}\n        className={classnames('todo', {\n          'has-text-danger': person.sex === 'f',\n        })}\n      >\n        {person.name}\n      </Link>\n    </>\n  ),\n);\n","import React from 'react';\nimport classnames from 'classnames';\nimport { useParams } from 'react-router-dom';\nimport { Person } from '../../types';\nimport { PersonLink } from '../PersonLink/PersonLink';\n\ntype Props = {\n  person: Person;\n};\n\nexport const PersonItem: React.FC<Props> = React.memo(\n  ({ person }) => {\n    const { slug = '' } = useParams();\n    const isSelected = (person.slug === slug);\n\n    return (\n      <tr\n        data-cy=\"person\"\n        className={classnames({\n          'has-background-warning': isSelected,\n        })}\n      >\n        <td>\n          <PersonLink person={person} />\n        </td>\n\n        <td>{person.sex}</td>\n        <td>{person.born}</td>\n        <td>{person.died}</td>\n\n        <td>\n          {person.mother\n            ? <PersonLink person={person.mother} />\n            : person.motherName || '-'}\n        </td>\n        <td>\n          {person.father\n            ? <PersonLink person={person.father} />\n            : person.fatherName || '-'}\n        </td>\n      </tr>\n    );\n  },\n);\n","import React from 'react';\nimport { Person } from '../../types';\nimport { PersonItem } from '../PersonItem';\n\ntype Props = {\n  people: Person[];\n};\n\nexport const PeopleTable: React.FC<Props> = React.memo(\n  ({ people }) => (\n    <table\n      data-cy=\"peopleTable\"\n      className=\"table is-striped is-hoverable is-narrow is-fullwidth\"\n    >\n      <thead>\n        <tr>\n          <th>Name</th>\n          <th>Sex</th>\n          <th>Born</th>\n          <th>Died</th>\n          <th>Mother</th>\n          <th>Father</th>\n        </tr>\n      </thead>\n\n      <tbody>\n        {people.map(person => (\n          <PersonItem\n            key={person.slug}\n            person={person}\n          />\n        ))}\n      </tbody>\n    </table>\n  ),\n);\n","import { useEffect, useState } from 'react';\nimport { getPeople } from '../../api';\nimport { findParent } from '../../helpers';\nimport { Loader } from '../../components/Loader';\nimport { Person } from '../../types';\nimport { PeopleTable } from '../../components/PeopleTable';\n\nexport const PeoplePage = () => {\n  const [people, setPeople] = useState<Person[]>([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [isLoadError, setIsLoadError] = useState(false);\n\n  useEffect(() => {\n    getPeople()\n      .then(loadedPeople => {\n        const preparedPeople = loadedPeople.map(person => ({\n          ...person,\n          mother: findParent(loadedPeople, person.motherName),\n          father: findParent(loadedPeople, person.fatherName),\n        }));\n\n        setPeople(preparedPeople);\n      })\n      .catch(() => setIsLoadError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <>\n      <h1 className=\"title\">People Page</h1>\n\n      <div className=\"block\">\n        <div className=\"box table-container\">\n          {isLoading\n            ? (\n              <Loader />\n            )\n            : (\n              <PeopleTable people={people} />\n            )}\n\n          {isLoadError && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              Something went wrong\n            </p>\n          )}\n\n          {!isLoading && !people.length && (\n            <p data-cy=\"peopleLoadingError\" className=\"has-text-danger\">\n              <p data-cy=\"noPeopleMessage\">\n                There are no people on the server\n              </p>\n            </p>\n          )}\n        </div>\n      </div>\n    </>\n  );\n};\n","import React from 'react';\n\nexport const HomePage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Home Page</h1>\n));\n","import React from 'react';\n\nexport const NotFoundPage: React.FC = React.memo(() => (\n  <h1 className=\"title\">Page not found</h1>\n));\n","import { createRoot } from 'react-dom/client';\nimport {\n  HashRouter, Navigate, Route, Routes,\n} from 'react-router-dom';\n\nimport 'bulma/css/bulma.css';\nimport '@fortawesome/fontawesome-free/css/all.css';\n\nimport { App } from './App';\nimport { PeoplePage } from './pages/PeoplePage';\nimport { HomePage } from './pages/HomePage';\nimport { NotFoundPage } from './pages/NotFoundPage';\n\ncreateRoot(document.getElementById('root') as HTMLDivElement)\n  .render(\n    <HashRouter>\n      <Routes>\n        <Route path=\"/\" element={<App />}>\n          <Route index element={<HomePage />} />\n          <Route path=\"/home\" element={<Navigate to=\"/\" replace />} />\n\n          <Route path=\"people\">\n            <Route index element={<PeoplePage />} />\n            <Route path=\":slug\" element={<PeoplePage />} />\n          </Route>\n\n          <Route path=\"*\" element={<NotFoundPage />} />\n        </Route>\n      </Routes>\n    </HashRouter>,\n  );\n"],"sourceRoot":""}